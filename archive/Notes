
Some things that it would be nice to check (varying priorities!)

- Response to a second Z39.50 Init

- Whether referenceId is properly implemented

- Whether attribute-set is inspected and honoured

- How SRU servers respond to bad HTTP headers

- Malformed queries such as "@and foo"

Add plugin architecture for additional tests.  Allow each test to
specify whether it is CRUCIAL, DESIRABLE or whatever, and the
frequency with which it is run.

Note results of each individual test (where?) and raise an alert when
a test gives a different result from the previous time.

Capture more information about what goes wrong at low levels.  Does
YAZ itself allow an APDU log to be generated or is it still only
yaz-client and/or GFS that does this?

Make a queue of servers to be queried, and keep the pod "sufficiently
full", throwing a new one in as an older one is exhausted.

Two weeks to have framework running.

Test dependent on other test; use results from previous test as input
for this one.  One test that is the aggregate of others.

Have a pre-cooked set of sample words to use in queries in the hope of
finding one or more records; remember which words work well for each
server.

Make this into Alvis work by adding a subject-sniffer for the peer
network.  Use the extended ZeeRex records to produce Alvis D3.1
peer-description records using XSLT that Marc will write.

